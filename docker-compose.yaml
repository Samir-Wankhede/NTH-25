# services:
#   nginx:
#     build: ./nginx
#     ports:
#       - "80:80"
#     depends_on:
#       - backend
#       - admin
#   data-init:
#     build: ./data-init
#     volumes: 
#       - data_volume:/data
  
#   backend:
#     build: ./backend
#     ports: 
#       - "5789:3000"
#     volumes:
#       - data_volume:/data
#     env_file:
#       - .env
#     depends_on:
#       data-init:
#         condition: service_completed_successfully
  
#   admin:
#     build: ./admin
#     ports: 
#       - "4788:4000"
#     volumes:
#       - data_volume:/data
#     env_file:
#       - .env
#     depends_on:
#       data-init:
#         condition: service_completed_successfully

# volumes:
#   data_volume:

# first run docker-compose run --rm certbot
services:
  nginx:
    build: ./nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - letsencrypt:/etc/letsencrypt
      - certbot_challenges:/var/www/certbot
    depends_on:
      - backend
      - admin
    restart: always

  certbot:
    image: certbot/certbot
    volumes:
      - letsencrypt:/etc/letsencrypt
      - certbot_challenges:/var/www/certbot
    entrypoint: >
      sh -c "certbot certonly --webroot --webroot-path=/var/www/certbot 
      --email your-email@example.com --agree-tos --no-eff-email 
      --staging -d nthhost.credenz.co.in && 
      crond -f"

  certbot-renew:
    image: certbot/certbot
  volumes:
    - letsencrypt:/etc/letsencrypt
    - certbot_challenges:/var/www/certbot
  entrypoint: >
    sh -c "certbot renew --webroot --webroot-path=/var/www/certbot && nginx -s reload && sleep 12h && certbot renew"

  data-init:
    build: ./data-init
    volumes: 
      - data_volume:/data

  backend:
    build: ./backend
    ports: 
      - "5789:3000"
    volumes:
      - data_volume:/data
    env_file:
      - .env
    depends_on:
      data-init:
        condition: service_completed_successfully
    restart: unless-stopped

  admin:
    build: ./admin
    ports: 
      - "4788:4000"
    volumes:
      - data_volume:/data
    env_file:
      - .env
    depends_on:
      data-init:
        condition: service_completed_successfully
    restart: unless-stopped

volumes:
  data_volume:
  letsencrypt:
  certbot_challenges:
